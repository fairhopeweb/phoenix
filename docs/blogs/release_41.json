{
  "Title": "Create a Crypto Integration in Your Flutter Apps",
  "Slug": "crypto-integration-flutter-apps",
  "Collection ID": "642da2c43fe34c364a69857f",
  "Item ID": "642da2c43fe34c4601698a47",
  "Created On": "Fri Jul 08 2022 20:48:23 GMT+0000 (Coordinated Universal Time)",
  "Updated On": "Fri Feb 24 2023 19:49:26 GMT+0000 (Coordinated Universal Time)",
  "PublishedOn": "Wed Apr 05 2023 16:53:15 GMT+0000 (Coordinated Universal Time)",
  "MainImage": "https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62ed6373eb86d367268d59e3_flutter3.png",
  "Post summary": "Have you ever wondered how to accept crypto payments in your web app? Learn how to integrate Metamask with Flutter web to accept Ethereum payments and create a crypto wallet.",
  "FullPost": "<p id=\"\">Have you ever wondered how to accept crypto payments in your web app? Fear not! I’m going to show you how to integrate Metamask with Flutter web to accept Ethereum payments.</p><h2 id=\"\"><strong id=\"\">Metamask</strong></h2><p id=\"\">Metamask is a cryptocurrency wallet that allows you to transact with the Ethereum blockchain. It’s simply your wallet available through their browser extensions and applications, which you can connect to sites that support payment via Metamask. It really is that simple, and that’s all you need to know for this article, but if you’re interested in learning more, check out their <a href=\"https://metamask.io/\" target=\"_blank\" id=\"\">official site</a>.</p><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-center\" data-rt-type=\"image\" data-rt-align=\"center\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62c89467a279df227bc27515_1*O-u58Uwm7dKHjIyt4jW6IQ.png\" alt=\"https://miro.medium.com/max/698/1*O-u58Uwm7dKHjIyt4jW6IQ.png\" id=\"\" width=\"auto\" height=\"auto\" loading=\"auto\"></div><figcaption id=\"\">Metamask extension</figcaption></figure><h3 id=\"\"><strong id=\"\">Flutter Setup</strong></h3><p id=\"\">The Flutter web setup should be quite easy. Just make sure that Flutter Web is enabled for the project; this shouldn’t be an issue if you’re already using Flutter 3.0. Simply create a new project You can title it Flutter Crypto App or Crypto Wallet Flutter:</p><p id=\"\">‍</p><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-fullwidth\" style=\"max-width:1040px\" data-rt-type=\"image\" data-rt-align=\"fullwidth\" data-rt-max-width=\"1040px\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62cf13b0c26ae1fc078afe1e_raycast-untitled%20(3).png\" loading=\"lazy\" id=\"\" width=\"auto\" height=\"auto\"></div><figcaption id=\"\"><a href=\"https://raman.pieces.cloud/?p=1a8d449cae\" target=\"_blank\" id=\"\">Save to Pieces</a></figcaption></figure><p id=\"\">Done! Well, not really. You have your Flutter project setup though.</p><h3 id=\"\"><strong id=\"\">Required packages</strong></h3><p id=\"\">Of course, hats off to the Flutter community for making our tasks easy! We will be using the following package to implement our Metamask flutter integration:</p><ul id=\"\"><li id=\"\"><a href=\"https://pub.dev/packages/flutter_web3\" target=\"_blank\" id=\"\">flutter_web3</a></li><li id=\"\"><a href=\"https://pub.dev/packages/provider\" target=\"_blank\" id=\"\">provider</a></li></ul><p id=\"\">And that’s it! That’s pretty much all you need to get into the world of Web3 via Flutter3.</p><h3 id=\"\"><strong id=\"\">‍Coding</strong></h3><p id=\"\">Ready? Here we go!</p><p id=\"\">First, we will be setting up our provider for Metamask. Start here:</p><h5 id=\"\"><strong id=\"\">Creating the Provider Class | Create Crypto Wallet</strong></h5><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-fullwidth\" style=\"max-width:1040px\" data-rt-type=\"image\" data-rt-align=\"fullwidth\" data-rt-max-width=\"1040px\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62cc2da46cdaeb96d5cb6c84_raycast-untitled.png\" loading=\"lazy\" id=\"\" width=\"auto\" height=\"auto\"></div><figcaption id=\"\"><a href=\"https://raman.pieces.cloud/?p=c4df41b737\" target=\"_blank\" id=\"\">Save to Pieces</a></figcaption></figure><p id=\"\">We’ll be needing the following variables to manage various scenarios:</p><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-fullwidth\" style=\"max-width:1290px\" data-rt-type=\"image\" data-rt-align=\"fullwidth\" data-rt-max-width=\"1290px\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62cc2dd17ad9ae286542d3b4_raycast-untitled%20(1).png\" loading=\"lazy\" id=\"\" width=\"auto\" height=\"auto\"></div><figcaption id=\"\"><a href=\"https://georgiad.pieces.cloud/?p=fd024e9c77\" target=\"_blank\" id=\"\">Save to Pieces</a></figcaption></figure><p id=\"\">Don’t worry! I’ll explain all of this!</p><ol id=\"\"><li id=\"\">currentChain → We set this variable to -1 so that we do not immediately connect to a chain when the wallet connects. </li><li id=\"\">currentAddress → The present address of our Metamask.</li><li id=\"\">operatingChain → The Ethereum chain we’ll be operating on. For now, it will be test networks, so we set it to 4 (Rinkeby Test Network).</li><li id=\"\">isEnabled → Checks whether the browser supports Metamask.</li><li id=\"\">isInOperatingChain → A bool variable that tells, whether we are connected to the correct chain or not.</li><li id=\"\">isConnected → A state that shows whether Metamask has been connected or not.</li></ol><p id=\"\">The code will be now like this:</p><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-fullwidth\" style=\"max-width:1840px\" data-rt-type=\"image\" data-rt-align=\"fullwidth\" data-rt-max-width=\"1840px\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62cc2ecf2ed81fc21797b47d_raycast-untitled%20(3).png\" loading=\"lazy\" id=\"\" width=\"auto\" height=\"auto\"></div><figcaption id=\"\"><a href=\"https://raman.pieces.cloud/?p=03574fa520\" target=\"_blank\" id=\"\">Save to Pieces</a></figcaption></figure><h5 id=\"\"><strong id=\"\">Connecting Metamask</strong></h5><p id=\"\">We will be making a function that connects to Metamask once the following requirements are achieved:</p><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-fullwidth\" style=\"max-width:1182px\" data-rt-type=\"image\" data-rt-align=\"fullwidth\" data-rt-max-width=\"1182px\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62cc2f29e23f79354dc94a4a_raycast-untitled%20(4).png\" loading=\"lazy\" id=\"\" width=\"auto\" height=\"auto\"></div><figcaption id=\"\"><a href=\"https://georgiad.pieces.cloud/?p=3fad43ab12\" target=\"_blank\" id=\"\">Save to Pieces</a></figcaption></figure><p id=\"\">Let me break it down for you:</p><ol id=\"\"><li id=\"\">Check if Web3 is enabled on the browser</li><li id=\"\">Get the accounts on Ethereum</li><li id=\"\">If the accounts are not empty, get the first address</li><li id=\"\">Get the ID of the current chain.</li></ol><h4 id=\"\"><strong id=\"\">Initializing Metamask</strong></h4><p id=\"\">To initialize, we need to clear the currentAddress and reset the currentChain for two conditions every time:</p><ol id=\"\"><li id=\"\">If the account changed</li><li id=\"\">If the chain itself changed</li></ol><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-fullwidth\" style=\"max-width:1040px\" data-rt-type=\"image\" data-rt-align=\"fullwidth\" data-rt-max-width=\"1040px\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62cf1494e8a04db318d2ab85_raycast-untitled%20(6).png\" loading=\"lazy\" id=\"\" width=\"auto\" height=\"auto\"></div><figcaption id=\"\"><a href=\"https://raman.pieces.cloud/?p=91434bab68\" target=\"_blank\" id=\"\">Save to Pieces</a></figcaption></figure><p id=\"\">We’re done with one “3”— the Web3 part. Now it’s time for Flutter3.</p><h5 id=\"\"><strong id=\"\">Connecting Everything</strong></h5><p id=\"\">Put the providers in the MultiProvider as we always do, but this time simply call the init() method that we wrote above.</p><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-fullwidth\" style=\"max-width:1382px\" data-rt-type=\"image\" data-rt-align=\"fullwidth\" data-rt-max-width=\"1382px\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62cc2fd33c60ffd74b085314_raycast-untitled%20(6).png\" loading=\"lazy\" id=\"\" width=\"auto\" height=\"auto\"></div><figcaption id=\"\"><a href=\"https://raman.pieces.cloud/?p=4e7444bab2\" target=\"_blank\" id=\"\">Save to Pieces</a></figcaption></figure><p id=\"\">Now, we’ll make a button to start connecting to Metamask with conditions.</p><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-fullwidth\" style=\"max-width:703px\" data-rt-type=\"image\" data-rt-align=\"fullwidth\" data-rt-max-width=\"703px\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62cc303d8c00d25b4ef30e0d_raycast-untitled%20(4).svg\" loading=\"lazy\" id=\"\" width=\"auto\" height=\"auto\"></div><figcaption id=\"\"><a href=\"https://raman.pieces.cloud/?p=6813468f91\" target=\"_blank\" id=\"\">Save to Pieces</a></figcaption></figure><p id=\"\">Sadly, Metamask doesn’t work in debug mode, so you have to run the web server for Flutter web and visit the URL.</p><p id=\"\">In case you want to hot reload/restart, after pressing “r” in the terminal, make sure to reload the web browser yourself.</p><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-fullwidth\" style=\"max-width:1040px\" data-rt-type=\"image\" data-rt-align=\"fullwidth\" data-rt-max-width=\"1040px\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62cc307187e915240186f60a_raycast-untitled%20(7).png\" loading=\"lazy\" id=\"\" width=\"auto\" height=\"auto\"></div><figcaption id=\"\"><a href=\"https://raman.pieces.cloud/?p=0010488fac\" target=\"_blank\" id=\"\">Save to Pieces</a></figcaption></figure><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-center\" data-rt-type=\"image\" data-rt-align=\"center\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62c8946737aca104629f1218_1*lE6GKmaFtYEZO-ZdoJaV_w.png\" alt=\"https://miro.medium.com/max/1180/1*lE6GKmaFtYEZO-ZdoJaV_w.png\" id=\"\" width=\"auto\" height=\"auto\" loading=\"auto\"></div></figure><p id=\"\">And that’s all! 😀 Both of our “3s” are together and the combined effect will look something like this!</p><figure id=\"\" class=\"w-richtext-figure-type-image w-richtext-align-center\" data-rt-type=\"image\" data-rt-align=\"center\"><div id=\"\"><img src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62c89467d36ebc186adb37ef_1*gPnJr8WDM22pk4PQhkwGVQ.gif\" alt=\"https://miro.medium.com/max/1400/1*gPnJr8WDM22pk4PQhkwGVQ.gif\" id=\"\" width=\"auto\" height=\"auto\" loading=\"auto\"></div></figure><p id=\"\">Metamask in Flutter web 🔥</p><p id=\"\">Yay!! You did it. I hope you’ve learned something. Make sure to check out other articles on Flutter by exploring the blog.</p><p id=\"\"><strong id=\"\">💻 GitHub Repo</strong> → <a href=\"https://github.com/mhmzdev/flutter-metamask\" target=\"_blank\" id=\"\">https://github.com/mhmzdev/flutter-metamask</a></p><p id=\"\">‍</p><h4 id=\"\"><strong id=\"\">An Easier Way to Save Your Flutter Snippets | </strong><a href=\"https://code.pieces.app/plugins\"><strong id=\"\">Pieces for Developers</strong></a></h4><p>Developing Flutter applications can be difficult when you have a lot of widgets to save and reuse later, but don't have them in an accessible place. Additionally, when you are searching through Flutter and Dart documentation, it can be helpful to save examples that can be used later. This is where <a href=\"https://code.pieces.app/plugins\">Pieces</a> comes in. It is a desktop application that allows you to save your code snippets efficiently and integrates with other programs. With Pieces, you can easily save any code snippets from StackOverflow using the chrome extension, automatically save code from locally-hosted ML algorithms that recognize your code patterns, and classify snippets by language. You can even share code with others using generated links. The Pieces suite is continually being developed and there are exciting new features on the horizon for sharing, reusing, and saving code snippets.</p><p>‍</p>",
  "Date": "Wed Jul 13 2022 00:00:00 GMT+0000 (Coordinated Universal Time)",
  "Author": "Muhammad Hamza",
  "Author Photo": "https://uploads-ssl.webflow.com/6143afec68f555387049efb3/62c897f14df59b6b663dc49d_muhammadhamza.jpeg",
  "AMP URL": "",
  "TOC based on...": "h4,h5",
  "Tags": "flutter; dart; crypto",
  "CTA": "<p id=\"\">Use Pieces to supercharge your developer workflow! </p>",
  "CTA link": "https://code.pieces.app/plugins",
  "Canonical URL": ""
}
