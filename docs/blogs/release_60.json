{
  "Title": "Flutter GetX - Fetching Data From OpenSea API",
  "Slug": "flutter-getx-fetching-data-from-opensea-api",
  "Collection ID": "642da2c43fe34c364a69857f",
  "Item ID": "642da2c43fe34c1f2e698a3e",
  "Created On": "Wed Feb 08 2023 16:45:52 GMT+0000 (Coordinated Universal Time)",
  "Updated On": "Fri Mar 31 2023 14:50:33 GMT+0000 (Coordinated Universal Time)",
  "PublishedOn": "Wed Apr 05 2023 16:53:15 GMT+0000 (Coordinated Universal Time)",
  "MainImage": "https://uploads-ssl.webflow.com/6143afec68f555387049efb3/63e3d1bf2d302d5f087c345b_FlutterGetX_1a413864e27e934ec0df266b111b3eba_2000.jpeg",
  "Post summary": "This is a step-by-step tutorial that will walk you through the process of retrieving data from an OpenSea API using Flutter and GetX.",
  "FullPost": "<p>This is a step-by-step tutorial that will walk you through the process of retrieving data from an OpenSea API using Flutter and GetX.</p><h2 id=\"8o12q\">What is Flutter GetX?</h2><p>Flutter has numerous state management components, including Provider, GetX, Bloc, Riverpod, Mobx, and others. GetX, however, is more than just a state management library; it is also a micro-framework that combines dependency injection and route management. GetX provides a top-notch development experience in a lightweight yet effective Flutter solution.</p><h2 id=\"dunrk\">To Get Data from an OpenSea API Using GetX, Follow These Steps:</h2><ol type=\"1\"><li>Add the <u><a href=\"https://pub.dev/packages/http\" target=\"_blank\" rel=\"noopener noreferrer\">HTTP package</a></u> and <a href=\"https://pub.dev/packages/get\" target=\"_blank\" rel=\"noopener noreferrer\">g<u>etx package</u></a> in <code>pubspec.yaml</code>.</li><li>Create a model based on your data.</li><li>Create a GetX controller and make a network request using the http package.</li><li>Display the data in an appropriate format.</li></ol><p>First, let&#x27;s start by adding the packages:</p><figure class=\"w-richtext-figure-type-image w-richtext-align-center\" data-rt-type=\"image\" data-rt-align=\"center\"><div><img alt=\"Code snippet with Flutter.\" src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/63e3d1c02d302d794e7c350e_image2_8d7201cf6c9bd88973f42d2a2efc2e21_800.png\"></div></figure><p>Now, use the following Flutter GetX CLI command in your command prompt to install the packages:</p><p><code>flutter pub get</code></p><p><u><a href=\"https://amanullah.pieces.cloud/?p=8a7e48a554\" target=\"_blank\" rel=\"noopener noreferrer\">Save to Pieces</a></u></p><h3 id=\"8d7kt\">Create a Model Based on Your Data:</h3><p>You can use this website to <a href=\"https://jsontodart.com/\" target=\"_blank\" rel=\"noopener noreferrer\">create a DART model</a> from your JSON data.</p><p>Next, youâ€™ll be creating an <code>OpenseaModel</code> class that contains the JSON data as shown below:</p><pre>class OpenseaModel {<br>  OpenseaModel({<br>    required this.assets,<br>  });<br><br>  List&lt;Assets&gt;? assets;<br><br>  OpenseaModel.fromJson(Map&lt;String, dynamic&gt; json) {<br>    assets = List.from(json[&#x27;assets&#x27;]).map((e) =&gt; Assets.fromJson(e)).toList();<br>  }<br><br>  Map&lt;String, dynamic&gt; toJson() {<br>    final _data = &lt;String, dynamic&gt;{};<br>    _data[&#x27;assets&#x27;] = assets!.map((e) =&gt; e.toJson()).toList();<br>    return _data;<br>  }<br>}<br><br>class Assets {<br>  Assets({<br>    required this.imageUrl,<br>    required this.name,<br>    this.description,<br>    required this.permalink,<br>  });<br><br>  String? imageUrl;<br>  String? name;<br>  String? description;<br>  String? permalink;<br><br>  Assets.fromJson(Map&lt;String, dynamic&gt; json) {<br>    imageUrl = json[&#x27;image_url&#x27;];<br>    name = json[&#x27;name&#x27;];<br>    description = null;<br>    permalink = json[&#x27;permalink&#x27;];<br>  }<br><br>  Map&lt;String, dynamic&gt; toJson() {<br>    final _data = &lt;String, dynamic&gt;{};<br>    _data[&#x27;image_url&#x27;] = imageUrl;<br>    _data[&#x27;name&#x27;] = name;<br>    _data[&#x27;description&#x27;] = description;<br>    _data[&#x27;permalink&#x27;] = permalink;<br>    return _data;<br>  }<br>}</pre><p><u><a href=\"https://amanullah.pieces.cloud/?p=b97c4fb8bf\" target=\"_blank\" rel=\"noopener noreferrer\">Save to Pieces</a></u></p><h2 id=\"bdrtd\">Create a Flutter GetX Controller and make a Network Request Using the HTTP Package:</h2><p>Now, follow the steps below to create a Flutter GetX controller and fetch the data into the OpenSea model:</p><ol type=\"1\"><li>Convert the response body to a JSON Map using the dart: convert package.</li><li>If the server returns a status code of 200, use the fromJSON() factory method to convert JSON Map into OpenSea model.</li><li>Throw an exception if the server does not respond with an OK status code of 200.</li></ol><p>Here, we called <code>fetchData()</code> in the <code>onInit()</code> method, which will call the method whenever we create an instance of our controller.</p><pre>import &#x27;dart:convert&#x27;;<br><br>import &#x27;package:get/get.dart&#x27;;<br>import &#x27;package:getx_tutorials/models/opensea_model.dart&#x27;;<br>import &#x27;package:http/http.dart&#x27; as http;<br><br>class OpenseaController extends GetxController {<br>  var isLoading = false.obs;<br>  OpenseaModel? openseaModel;<br><br>  @override<br>  Future&lt;void&gt; onInit() async {<br>    super.onInit();<br>    fetchData();<br>  }<br><br>  fetchData() async {<br>    try {<br>      isLoading(true);<br>      http.Response response = await http.get(Uri.tryParse(<br>          &#x27;https://api.opensea.io/api/v1/assets?collection=cryptopunks&#x27;)!);<br>      if (response.statusCode == 200) {<br>        ///data successfully<br>        var result = jsonDecode(response.body);<br><br>        openseaModel = OpenseaModel.fromJson(result);<br>      } else {<br>        print(&#x27;error fetching data&#x27;);<br>      }<br>    } catch (e) {<br>      print(&#x27;Error while getting data is $e&#x27;);<br>    } finally {<br>      isLoading(false);<br>    }<br>  }<br>}</pre><p><u><a href=\"https://amanullah.pieces.cloud/?p=3d6846bee6\" target=\"_blank\" rel=\"noopener noreferrer\">Save to Pieces</a></u></p><h3 id=\"30sg7\">Display the Data in an Appropriate Format:</h3><p>Now, on our home screen, we create an instance of our controller as well as a list view to display the data we retrieved from the OpenSea API.</p><pre>import &#x27;package:flutter/material.dart&#x27;;<br>import &#x27;package:get/get.dart&#x27;;<br>import &#x27;package:getx_tutorials/controllers/opensea_controller.dart&#x27;;<br>import &#x27;package:url_launcher/url_launcher.dart&#x27;;<br><br>main() {<br>  runApp(GetMaterialApp(home: MyApp()));<br>}<br><br>class MyApp extends StatelessWidget {<br>  OpenseaController openseaController = Get.put(OpenseaController());<br> <br> @override<br>  Widget build(BuildContext context) {<br>    return Scaffold(<br>      appBar: AppBar(title: Text(&#x27;opensea Api&#x27;)),<br>        body: Obx(<br>      () =&gt; openseaController.isLoading.value<br>          ? Center(<br>              child: CircularProgressIndicator(),<br>            )<br>          : ListView.builder(<br>              itemCount: openseaController.openseaModel?.assets?.length ?? 0,<br>              itemBuilder: (context, index) {<br>                return ListTile(<br>                    title: Text(<br>                        openseaController.openseaModel?.assets![index].name ??<br>                            &#x27;no name&#x27;),<br>                    subtitle: Text(openseaController<br>                            .openseaModel?.assets![index].description ??<br>                        &#x27;no description&#x27;),<br>                    leading: openseaController<br>                                .openseaModel?.assets![index].imageUrl ==<br>                            null<br>                        ? Icon(Icons.image)<br>                        : Image.network(openseaController<br>                            .openseaModel!.assets![index].imageUrl!),<br>                    onTap: () {<br>                      _launchInBrowser(Uri.parse(openseaController<br>                          .openseaModel!.assets![index].permalink!));<br>                    });<br>              }),<br>    ));<br>  }<br><br>  Future&lt;void&gt; _launchInBrowser(Uri url) async {<br>    if (!await launchUrl(<br>      url,<br>      mode: LaunchMode.externalApplication,<br>    )) {<br>      throw &#x27;Could not launch $url&#x27;;<br>    }<br>  }<br>}</pre><p><u><a href=\"https://amanullah.pieces.cloud/?p=4ebd4cbbe4\" target=\"_blank\" rel=\"noopener noreferrer\">Save to Pieces</a></u></p><p>Also, there is a <code>_launchInBrowser() </code>method that will open your images link in the browser.</p><p><strong>Output:</strong></p><figure class=\"w-richtext-figure-type-image w-richtext-align-center\" data-rt-type=\"image\" data-rt-align=\"center\"><div><img alt=\"A screenshot of OpenSea API data returned in the browser. \" src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/63e3d1c02d302dfe487c350f_image_f5d273aa10090f0519efd3ee2f85112c_800.png\"></div></figure><h2 id=\"do5h0\">Conclusion</h2><p>In this article, you learned how to use Flutter and GetX to Fetch data from an OpenSea API. We began by importing packages, then generated a model for our JSON. After that, we created a controller file to retrieve data from the OpenSea API. Finally, the data was displayed in a list view.</p><h3 id=\"8eq3s\">Follow this Tutorial on YouTube:</h3><figure class=\"w-richtext-figure-type-video w-richtext-align-center\" style=\"padding-bottom: 33.9%;\" data-rt-type=\"video\" data-rt-align=\"center\" data-rt-max-width=\"\" data-rt-max-height=\"33.9%\" data-rt-dimensions=\"200:113\" data-page-url=\"https://www.youtube.com/watch?v=Hjv0n_Qp9lQ&list=PLrTDw7ICfHFkvOFW_AERUTUbpmIPFccjS&index=3\"><div><iframe width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/Hjv0n_Qp9lQ?feature=oembed&list=PLrTDw7ICfHFkvOFW_AERUTUbpmIPFccjS&index=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Flutter Getx Rest API Tutorial - Fetching Data From Opensea Api\"></iframe></div></figure><p><strong>Full Source Code:</strong></p><p><u><a href=\"https://bit.ly/3NkrvkZ\" target=\"_blank\" rel=\"noopener noreferrer\">https://bit.ly/3NkrvkZ</a></u></p><h3 id=\"at6gh\">Bonus Tip!</h3><p>If you want to be more productive and grab the codes easily from any website, <u><a href=\"https://code.pieces.app/install\" target=\"_blank\" rel=\"noopener noreferrer\">try Pieces</a></u>. It allows you to save snippets in one-click from the web or your editor, and it auto-saves your frequently used code. Pieces also recommends snippets with Framework standards, saves snippets from screenshots, and much more.</p>\n\n    <figure data-rt-type=\"video\" data-rt-align=\"center\">\n        <!-- strchf script -->\n<script>\n        if(window.strchfSettings === undefined) window.strchfSettings = {};\n    window.strchfSettings.stats = {url: \"https://pieces-app.storychief.io/en/flutter-getx-fetching-data-from-opensea-api?id=135196019&type=26\",title: \"Flutter GetX - Fetching Data From OpenSea API\",id: \"f48cd0d8-d254-4e17-a18e-3d20939412eb\"};\n            (function(d, s, id) {\n      var js, sjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {window.strchf.update(); return;}\n      js = d.createElement(s); js.id = id;\n      js.src = \"https://d37oebn0w9ir6a.cloudfront.net/scripts/v0/strchf.js\";\n      js.async = true;\n      sjs.parentNode.insertBefore(js, sjs);\n    }(document, 'script', 'storychief-jssdk'))\n    </script>\n<!-- End strchf script -->    </figure>\n",
  "Date": "Wed Feb 08 2023 16:45:53 GMT+0000 (Coordinated Universal Time)",
  "Author": "Amanullah Bahram",
  "Author Photo": "https://uploads-ssl.webflow.com/6143afec68f555387049efb3/6351da49a118de2855daaf23_amanllah_f5ce24a18355965ac5ce86f76d067ea1_1000.png",
  "AMP URL": "",
  "TOC based on...": "h2,h3",
  "Tags": "flutter-9; api-3",
  "CTA": "",
  "CTA link": "",
  "Canonical URL": ""
}
