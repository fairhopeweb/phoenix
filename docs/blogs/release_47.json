{
  "Title": "Understanding DOM, Virtual DOM, and How They Work with React",
  "Slug": "dom-virtual-dom-react",
  "Collection ID": "642da2c43fe34c364a69857f",
  "Item ID": "642da2c43fe34cf9f96989f7",
  "Created On": "Tue Dec 13 2022 18:10:30 GMT+0000 (Coordinated Universal Time)",
  "Updated On": "Fri Mar 31 2023 15:14:18 GMT+0000 (Coordinated Universal Time)",
  "PublishedOn": "Wed Apr 05 2023 16:53:15 GMT+0000 (Coordinated Universal Time)",
  "MainImage": "https://uploads-ssl.webflow.com/6143afec68f555387049efb3/63dd67c112dd872fbc82c8aa_domandvirtualdom_0b22c133a9031c1cbc2e4e135dbcead3_2000.jpeg",
  "Post summary": "In this article, we'll learn about DOM and Virtual DOM, their differences, and how they’re applied in React. Let's jump in!",
  "FullPost": "<figure class=\"w-richtext-figure-type-image w-richtext-align-center\" data-rt-type=\"image\" data-rt-align=\"center\"><div><img alt=\"Stylized image about understanding DOM and Virtual DOM.\" src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/63dd67c312dd87f21082ca8a_domandvirtualdom_7a25aea3dd597061fa7d84afbe4fe90e_800.jpeg\"></div></figure><p>During my study of frontend development, I’ve found DOM (Document Object Model) and Virtual DOM (Virtual Document Object Model) pretty confusing. If you’re a fellow beginning developer, you might have the same problem; that’s probably why you&#x27;re reading this article right now.</p><p>DOM and Virtual DOM have their roles to play in React. In this article, you’ll learn what they are, their differences, and how to apply them in React. Let&#x27;s begin!</p><h2 id=\"55k0h\">What is React?</h2><p><u><a href=\"https://about.meta.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Meta</a></u> created <u><a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">React</a></u> (also called React.js or ReactJS) in 2013. It’s a free, open-source <u><a href=\"https://en.m.wikipedia.org/wiki/JavaScript_library\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript library</a></u> that developers use to create user interfaces based on <u><a href=\"https://www.usability.gov/how-to-and-tools/methods/user-interface-elements.html#:~:text=Interface%20elements%20include%20but%20are,pagination%2C%20slider%2C%20tags%2C%20icons\" target=\"_blank\" rel=\"noopener noreferrer\">UI components</a></u> and <u><a href=\"https://developer.mozilla.org/en-US/docs/Glossary/SPA#:~:text=An%20SPA%20(Single%2Dpage%20application,content%20is%20to%20be%20shown.\" target=\"_blank\" rel=\"noopener noreferrer\">single-page applications</a></u>.</p><h2 id=\"3ppoc\">What is DOM in React?</h2><p>DOM, or Real DOM, is an acronym for Document Object Model. It’s simply the UI of an application. When your application changes, the DOM updates to reflect the change. DOM represents the structure and content of a website in the form of a tree. With DOM, scripts and webpages can manipulate, modify and identify the components of a website.</p><h3 id=\"bu6qi\">The Inefficiency of DOM</h3><p>DOM is slow, unlike modern-day websites, which are fluid and reflect modifications almost immediately. DOM was intended for earlier websites, which were static because they were rendered by the server. By contrast, modern-day websites carry out rendering in the browser. Therefore, when using React DOM for modern websites, it’s slow. This is why Virtual DOM exists.</p><h2 id=\"dnju3\">What is Virtual DOM?</h2><p>Meta created Virtual DOM. It’s open-source and managed by the <u><a href=\"https://reactjs.org/community/team.html\" target=\"_blank\" rel=\"noopener noreferrer\">React team</a></u>. Virtual DOM is simply a copy of DOM. It has all the components and features of the DOM, but it cannot display the page of a website in a browser.</p><p>When there are a large number of elements in your DOM, it can be taxing to carry out updates using DOM. However, because of React Virtual DOM’s <u><a href=\"https://en.m.wikipedia.org/wiki/Observer_pattern\" target=\"_blank\" rel=\"noopener noreferrer\">observable pattern</a></u>, it’s considerably faster.</p><p>React Virtual DOM has all of its constituents waiting for a change in their state. Immediately after there&#x27;s a change, the it updates, and in turn, it aligns the change with the DOM, which causes the page to change in response.</p><h3 id=\"dvnpj\">Why is Virtual DOM Faster?</h3><p>When new elements are added to the UI, it creates a new Virtual DOM tree. On the tree, the elements are represented by colored spots. If any of the elements change, it creates a new tree. We then compare the new tree to the former tree to see which method is best to apply changes to the DOM.</p><p>Here&#x27;s a visual representation of the explanation:</p><figure class=\"w-richtext-figure-type-image w-richtext-align-center\" data-rt-type=\"image\" data-rt-align=\"center\"><div><img alt=\"A visual representation of a Virtual DOM tree.\" src=\"https://uploads-ssl.webflow.com/6143afec68f555387049efb3/6398c016e16a9555c00208a2_image1_3751c9be774d54c560a10624c98edc4d_800.jpeg\"></div></figure><p>As a result, the DOM does less work, which reduces the performance cost of updating it.</p><h3 id=\"775l2\">The Benefits of Virtual DOM</h3><h4 id=\"81m8d\">Better Performance</h4><p>Virtual DOM speeds up the performance of a website significantly. Due to the <u><a href=\"https://en.m.wikipedia.org/wiki/Observer_pattern\" target=\"_blank\" rel=\"noopener noreferrer\">observable pattern</a></u>, React can acknowledge and immediately update the part of the DOM that should be changed.</p><h4 id=\"abd42\">Increased Productivity</h4><p>It makes it easier to build <u><a href=\"https://en.m.wikipedia.org/wiki/Web_application\" target=\"_blank\" rel=\"noopener noreferrer\">web applications</a></u>. With the increase in the growth of React, developers are more productive.</p><h4 id=\"18d83\">Higher Memory Usage</h4><p>It makes <u><a href=\"https://en.m.wikipedia.org/wiki/Central_processing_unit\" target=\"_blank\" rel=\"noopener noreferrer\">CPU</a></u> and memory usage more efficient because it adds an additional layer of JavaScript to the browser.</p><h2 id=\"11ne9\">How Does React Work with Virtual DOM?</h2><p>In React, each piece of UI is a component, and each component has a given state or condition. React pays attention to the <u><a href=\"https://en.m.wikipedia.org/wiki/Observer_pattern\" target=\"_blank\" rel=\"noopener noreferrer\">observable pattern</a></u> and to changes in state. When there is a change in a component, React immediately updates the Virtual DOM tree. After it updates, React compares the new tree with the former tree in a process called &#x27;<u><a href=\"https://www.geeksforgeeks.org/what-is-diffing-algorithm/\" target=\"_blank\" rel=\"noopener noreferrer\">diffing</a></u>&#x27;.</p><p>After identifying the changed tree, React updates the <u><a href=\"https://www.techtarget.com/searchapparchitecture/definition/object\" target=\"_blank\" rel=\"noopener noreferrer\">objects</a></u> that have been changed in the Real DOM.</p><h3 id=\"e92me\">React’s Rendering Function</h3><p><code>Render()</code> is the process that updates and renders UI. The lifecycle method in React is <code>render()</code><em>.</em></p><p>The <code>render()</code> function creates the tree containing the React elements. When the state of a component is updated, <code>render()</code> provides a different tree containing the new React elements. By using <code>setState()</code> in the component, React immediately identifies the change in the state of the component and then re-renders it.</p><p>After that, React finds a way to update the UI so that the recent changes can be reflected. At this point, React updates its Virtual DOM, and in turn, updates the changed objects on the real DOM.</p><h4 id=\"2302c\">Batch Updates</h4><p>Updates to the Real DOM are sent in batches to repair and repaint the UI, leading to increased performance. This is better than sending updates on every single change.</p><h2 id=\"dd0ff\">Conclusion</h2><p>Understanding DOM and Virtual DOM is crucial for web developers. Now that you&#x27;ve learned the exact difference between them, I hope it increases your growth and knowledge in web development.</p>\n\n    <figure data-rt-type=\"video\" data-rt-align=\"center\">\n        <!-- strchf script -->\n<script>\n        if(window.strchfSettings === undefined) window.strchfSettings = {};\n    window.strchfSettings.stats = {url: \"https://pieces-app.storychief.io/en/dom-virtual-dom-react?id=1714116321&type=26\",title: \"Understanding DOM, Virtual DOM, and How They Work with React\",id: \"f48cd0d8-d254-4e17-a18e-3d20939412eb\"};\n            (function(d, s, id) {\n      var js, sjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {window.strchf.update(); return;}\n      js = d.createElement(s); js.id = id;\n      js.src = \"https://d37oebn0w9ir6a.cloudfront.net/scripts/v0/strchf.js\";\n      js.async = true;\n      sjs.parentNode.insertBefore(js, sjs);\n    }(document, 'script', 'storychief-jssdk'))\n    </script>\n<!-- End strchf script -->    </figure>\n",
  "Date": "Tue Dec 13 2022 18:10:31 GMT+0000 (Coordinated Universal Time)",
  "Author": "Yoma Daniel",
  "Author Photo": "https://uploads-ssl.webflow.com/6143afec68f555387049efb3/637681334cb35a74825da301_image2_1a582c938d8a05bd7701b660a0ab05d8_1000.png",
  "AMP URL": "",
  "TOC based on...": "h2,h3",
  "Tags": "react-7; frontend; webdev",
  "CTA": "",
  "CTA link": "",
  "Canonical URL": ""
}
